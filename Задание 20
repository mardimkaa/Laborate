#include <stdio.h>
#include <math.h>
#include <stdlib.h>
int main()
{
    int N;
    printf("Введите номер задания:");
    scanf("%d", &N);
    if (N == 1) {
        int n,k,l;
     
        printf("Введите N: ");
        scanf("%i",&n);
     
        int a[n];
     
        int i;
        printf("Введите массив а\n");
        for (i=0; i<n; ++i){
            printf("a[%i] : ",i);
            scanf("%i",&a[i]);
        }
        
        int c[n];
        int b[n];
        k=0;
        b[k]=1;
        c[k]=a[k];
        for (i=1;i<n;i++){
            if (a[i-1]==a[i]){
               b[k]++; 
            }
            else{
                k++;
                b[k]=1;
                c[k]=a[i];
            }
        }
        
        
        printf("Решение\n");
        for (i=0; i<=k;++i){
        printf("  Число %i встречается %i раз\n",b[i],c[i]);
        }
        
    }
       if (N == 2){
            int n;

        printf("N: ");
        scanf("%i",&n);
        int a[n];

        int i;
        for (i=0; i<n; ++i){
            printf("a[%i] : ",i);
            scanf("%i",&a[i]);
        }
        int l;
        printf("Введите L: ");
        scanf("%i",&l);
        int b[n];
        int i2=-1;
        int k = 1;
        int i3;
        int endn=n;
         
        for (i=1; i<n; ++i){
            if (a[i-1]!=a[i]){
                if(k>l){
                    b[++i2]=0;
                    endn-=k-1;
                }
                else{
                    for (i3=0; i3<k; ++i3){
                        b[++i2]=a[i-1];
                    }
                }
                k = 0;
            }
            k++;
        }
        
        
        if(k > l){
           b[++i2]=0;
           endn-=k-1; 
        }
        
        else{
            for (i3=0; i3<k; ++i3){
                b[++i2]=a[i-1];
            }
        }
        
        for (i=0; i<endn;++i){
            a[i]=b[i];
        }
     
        for (i=0; i<endn;++i){
           printf("%i\n",a[i]); 
        }
     
        return 0;
         
      
    }

    if (N == 4){
    int n;
 
    printf("N: ");
    scanf("%i",&n);
    float a[n][1];
    
    int i;
    for (i=0; i<n; ++i){
        printf("Координата %d точки\n", i+1);
        printf("Введите x :");
        scanf("%f",&a[i][0]);
        printf("Введите y : ");
        scanf("%f",&a[i][1]);
    }
 
    int maxx=0;
    float r,rmax;
    for (i=0; i<n; ++i){
        if (a[i][0]<0 && a[i][1]>0){
            r= sqrt(pow(a[i][0],2)+pow(a[i][1],2));
            if (r>rmax || i==0) {
                rmax=r;
                maxx=i;
            }
        }
    }
 
    printf("точка, наиболее удаленная от начала координат имеет координаты %f %f",a[maxx][0],a[maxx][1]);
    return 0;

    }

    if (N == 3){
        int a[20],b[20];
    int n,k;
    printf("N: ");
    scanf("%i",&n);
    printf("K: ");
    scanf("%i",&k);
 
    int i;
    for (i=0; i<n; ++i){
        printf("a[%i] : ",i+1);
        scanf("%i",&a[i]);
    }
 
    int nk =1, beginkseries=1, lenkseries=(k==1?1:0), beginendseries;
 
    for (i=1; i<n; ++i){
        if (a[i-1]!=a[i]){
            nk++;
            if (nk==k) beginkseries=i;
            beginendseries=i;
        }
        if (nk==k) lenkseries++;
    }
 
    int i2=-1;
    for (i=0; i<beginkseries; ++i)  b[++i2]=a[i];
 
    for (i=beginendseries; i<n; ++i)  b[++i2]=a[i];
 
    for (i=beginkseries+lenkseries; i<beginendseries; ++i)  b[++i2]=a[i];
 
    for (i=beginkseries; i<beginkseries+lenkseries; ++i)  b[++i2]=a[i];
 
    for (i=0; i<n;++i) a[i]=b[i];
 
    for (i=0; i<n;++i) printf("a  %i : %i\n",i+1,a[i]);
 
    return 0;
        }

    if (N == 5){
        float a[10][2];
    int n;
 
    printf("Введите N: ");
    scanf("%i",&n);
 
    int i;
    for (i=0; i<n; ++i){
        printf("Введите x: ");
        scanf("%f",&a[i][0]);
        printf("Введите y: ");
        scanf("%f",&a[i][1]);
    }
 
    int p1,p2,p3,i2,i3;
    float p,pmax=0;
 
    for (i=0; i<n; ++i)
        for (i2=i+1; i2<n; ++i2)
            for (i3=i2+1; i3<n; ++i3){
                p=0;
                p+= sqrt(pow(a[i][0]-a[i2][0],2)+pow(a[i][1]-a[i2][1],2));
                p+= sqrt(pow(a[i][0]-a[i3][0],2)+pow(a[i][1]-a[i3][1],2));
                p+= sqrt(pow(a[i2][0]-a[i3][0],2)+pow(a[i2][1]-a[i3][1],2));
                if (p > pmax) {
                    p1=i;
                    p2=i2;
                    p3=i3;
                    pmax=p;
                }
            }
 
 
    printf("P: %f\n",pmax);
    printf("A %i :\n x: %f\n y: %f\n",p1+1,a[p1][0],a[p1][1]);
    printf("A %i :\n x: %f\n y: %f\n",p2+1,a[p2][0],a[p2][1]);
    printf("A %i :\n x: %f\n y: %f\n",p3+1,a[p3][0],a[p3][1]);
    return 0;
}
}
